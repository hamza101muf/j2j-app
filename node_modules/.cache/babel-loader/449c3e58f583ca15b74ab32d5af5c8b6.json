{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamza\\\\Documents\\\\j2j-app\\\\src\\\\main-component\\\\ForgotPassword\\\\index.js\";\nimport React, { useState } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport './style.scss';\n\nconst ForgotPassword = props => {\n  const [value, setValue] = useState({\n    email: ''\n  });\n\n  const changeHandler = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n    validator.showMessages();\n  };\n\n  const [validator] = React.useState(new SimpleReactValidator({\n    className: 'errorMessage'\n  }));\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (validator.allValid()) {\n      setValue({\n        email: ''\n      });\n      validator.hideMessages();\n      toast.success('You successfully Login!');\n      props.history.push('/login');\n    } else {\n      validator.showMessages();\n      toast.error('Empty field is not allowed!');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Reset your account password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"E-mail\",\n    value: value.email,\n    variant: \"outlined\",\n    name: \"email\",\n    label: \"E-mail\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }), validator.message('email', value.email, 'required|email')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"formFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    className: \"cBtn cBtnLarge cBtnTheme\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Resend Password\")), /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWithSocial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 62\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"noteHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 78\n    }\n  }, \"Return to Sign In\")))))));\n};\n\nexport default withRouter(ForgotPassword);","map":{"version":3,"sources":["C:/Users/Hamza/Documents/j2j-app/src/main-component/ForgotPassword/index.js"],"names":["React","useState","Grid","SimpleReactValidator","toast","TextField","Button","Link","withRouter","ForgotPassword","props","value","setValue","email","changeHandler","e","target","name","validator","showMessages","className","submitForm","preventDefault","allValid","hideMessages","success","history","push","error","shrink","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {toast} from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n\r\nimport './style.scss';\r\n\r\nconst ForgotPassword = (props) => {\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setValue({...value, [e.target.name]: e.target.value});\r\n        validator.showMessages();\r\n    };\r\n\r\n    const [validator] = React.useState(new SimpleReactValidator({\r\n        className: 'errorMessage'\r\n    }));\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setValue({\r\n                email: '',\r\n            });\r\n            validator.hideMessages();\r\n            toast.success('You successfully Login!');\r\n            props.history.push('/login');\r\n        } else {\r\n            validator.showMessages();\r\n            toast.error('Empty field is not allowed!');\r\n        }\r\n    };\r\n    return (\r\n        <Grid className=\"loginWrapper\">\r\n\r\n            <Grid className=\"loginForm\">\r\n                <h2>Forgot Password</h2>\r\n                <p>Reset your account password</p>\r\n                <form onSubmit={submitForm}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"E-mail\"\r\n                                value={value.email}\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('email', value.email, 'required|email')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid className=\"formFooter\">\r\n                                <Button fullWidth className=\"cBtn cBtnLarge cBtnTheme\" type=\"submit\">Resend\r\n                                    Password</Button>\r\n                            </Grid>\r\n                            <Grid className=\"loginWithSocial\">\r\n                                <Button className=\"facebook\"><i className=\"fa fa-facebook\"></i></Button>\r\n                                <Button className=\"twitter\"><i className=\"fa fa-twitter\"></i></Button>\r\n                                <Button className=\"linkedin\"><i className=\"fa fa-linkedin\"></i></Button>\r\n                            </Grid>\r\n                            <p className=\"noteHelp\">Already have an account? <Link to=\"/login\">Return to Sign In</Link>\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default withRouter(ForgotPassword);"]},"metadata":{},"sourceType":"module"}
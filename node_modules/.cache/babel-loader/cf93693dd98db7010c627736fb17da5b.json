{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamza\\\\Documents\\\\j2j-webs\\\\j2j-app\\\\src\\\\main-component\\\\LoginPage\\\\index.js\";\nimport React, { useState } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport './style.scss';\n\nconst LoginPage = props => {\n  const [value, setValue] = useState({\n    email: 'user@gmail.com',\n    password: '123456',\n    remember: false\n  });\n\n  const changeHandler = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n    validator.showMessages();\n  };\n\n  const rememberHandler = () => {\n    setValue({ ...value,\n      remember: !value.remember\n    });\n  };\n\n  const [validator] = React.useState(new SimpleReactValidator({\n    className: 'errorMessage'\n  }));\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (validator.allValid()) {\n      setValue({\n        email: '',\n        password: '',\n        remember: false\n      });\n      validator.hideMessages();\n      const userRegex = /^user+.*/gm;\n      const email = value.email;\n\n      if (email.match(userRegex)) {\n        toast.success('You successfully Login on Ummah !');\n        props.history.push('/home');\n      }\n    } else {\n      validator.showMessages();\n      toast.error('Empty field is not allowed!');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Sign in to your account\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"E-mail\",\n    value: value.email,\n    variant: \"outlined\",\n    name: \"email\",\n    label: \"E-mail\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }), validator.message('email', value.email, 'required|email')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"Password\",\n    value: value.password,\n    variant: \"outlined\",\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }), validator.message('password', value.password, 'required')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"formAction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: value.remember,\n      onChange: rememberHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 46\n      }\n    }),\n    label: \"Remember Me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Forgot Password?\")), /*#__PURE__*/React.createElement(Grid, {\n    className: \"formFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    className: \"cBtnTheme\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWithSocial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 62\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"noteHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 76\n    }\n  }, \"Create free account\")))))));\n};\n\nexport default withRouter(LoginPage);","map":{"version":3,"sources":["C:/Users/Hamza/Documents/j2j-webs/j2j-app/src/main-component/LoginPage/index.js"],"names":["React","useState","Grid","SimpleReactValidator","toast","TextField","Button","FormControlLabel","Checkbox","Link","withRouter","LoginPage","props","value","setValue","email","password","remember","changeHandler","e","target","name","validator","showMessages","rememberHandler","className","submitForm","preventDefault","allValid","hideMessages","userRegex","match","success","history","push","error","shrink","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {toast} from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n\r\nimport './style.scss';\r\n\r\nconst LoginPage = (props) => {\r\n    const [value, setValue] = useState({\r\n        email: 'user@gmail.com',\r\n        password: '123456',\r\n        remember: false,\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setValue({...value, [e.target.name]: e.target.value});\r\n        validator.showMessages();\r\n    };\r\n\r\n    const rememberHandler = () => {\r\n        setValue({...value, remember: !value.remember});\r\n    };\r\n\r\n    const [validator] = React.useState(new SimpleReactValidator({\r\n        className: 'errorMessage'\r\n    }));\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setValue({\r\n                email: '',\r\n                password: '',\r\n                remember: false\r\n            });\r\n            validator.hideMessages();\r\n\r\n            const userRegex = /^user+.*/gm;\r\n            const email = value.email;\r\n\r\n            if (email.match(userRegex)) {\r\n                toast.success('You successfully Login on Ummah !');\r\n                props.history.push('/home');\r\n            }\r\n        } else {\r\n            validator.showMessages();\r\n            toast.error('Empty field is not allowed!');\r\n        }\r\n    };\r\n    return (\r\n        <Grid className=\"loginWrapper\">\r\n            <Grid className=\"loginForm\">\r\n                <h2>Sign In</h2>\r\n                <p>Sign in to your account</p>\r\n                <form onSubmit={submitForm}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"E-mail\"\r\n                                value={value.email}\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('email', value.email, 'required|email')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Password\"\r\n                                value={value.password}\r\n                                variant=\"outlined\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('password', value.password, 'required')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid className=\"formAction\">\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={value.remember} onChange={rememberHandler}/>}\r\n                                    label=\"Remember Me\"\r\n                                />\r\n                                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                            </Grid>\r\n                            <Grid className=\"formFooter\">\r\n                                <Button fullWidth className=\"cBtnTheme\" type=\"submit\">Login</Button>\r\n                            </Grid>\r\n                            <Grid className=\"loginWithSocial\">\r\n                                <Button className=\"facebook\"><i className=\"fa fa-facebook\"></i></Button>\r\n                                <Button className=\"twitter\"><i className=\"fa fa-twitter\"></i></Button>\r\n                                <Button className=\"linkedin\"><i className=\"fa fa-linkedin\"></i></Button>\r\n                            </Grid>\r\n                            <p className=\"noteHelp\">Don't have an account? <Link to=\"/signup\">Create free account</Link>\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default withRouter(LoginPage);"]},"metadata":{},"sourceType":"module"}
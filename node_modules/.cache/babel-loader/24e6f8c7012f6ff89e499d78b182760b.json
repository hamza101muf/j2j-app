{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamza\\\\Documents\\\\j2j-app\\\\src\\\\main-component\\\\SignUpPage\\\\index.js\";\nimport React, { useState } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport './style.scss';\n\nconst SignUpPage = props => {\n  const [value, setValue] = useState({\n    email: '',\n    full_name: '',\n    password: '',\n    confirm_password: ''\n  });\n\n  const changeHandler = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n    validator.showMessages();\n  };\n\n  const [validator] = React.useState(new SimpleReactValidator({\n    className: 'errorMessage'\n  }));\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (validator.allValid()) {\n      setValue({\n        email: '',\n        full_name: '',\n        password: '',\n        confirm_password: ''\n      });\n      validator.hideMessages();\n      toast.success('Registration Complete successfully!');\n      props.history.push('/login');\n    } else {\n      validator.showMessages();\n      toast.error('Empty field is not allowed!');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Signup\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Signup your account\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"Full Name\",\n    value: value.full_name,\n    variant: \"outlined\",\n    name: \"full_name\",\n    label: \"Name\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), validator.message('full name', value.full_name, 'required|alpha')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"E-mail\",\n    value: value.email,\n    variant: \"outlined\",\n    name: \"email\",\n    label: \"E-mail\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), validator.message('email', value.email, 'required|email')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"Password\",\n    value: value.password,\n    variant: \"outlined\",\n    name: \"password\",\n    label: \"Password\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }), validator.message('password', value.password, 'required')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"Confirm Password\",\n    value: value.password,\n    variant: \"outlined\",\n    name: \"confirm_password\",\n    label: \"Confirm Password\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }), validator.message('confirm password', value.confirm_password, `in:${value.password}`)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"formFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    className: \"cBtn cBtnLarge cBtnTheme\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWithSocial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 62\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"noteHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 78\n    }\n  }, \"Return to Sign In\")))))));\n};\n\nexport default withRouter(SignUpPage);","map":{"version":3,"sources":["C:/Users/Hamza/Documents/j2j-app/src/main-component/SignUpPage/index.js"],"names":["React","useState","Grid","SimpleReactValidator","toast","TextField","Button","Link","withRouter","SignUpPage","props","value","setValue","email","full_name","password","confirm_password","changeHandler","e","target","name","validator","showMessages","className","submitForm","preventDefault","allValid","hideMessages","success","history","push","error","shrink","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AAEA,OAAO,cAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AAC/BY,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,SAAS,EAAE,EAFoB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,gBAAgB,EAAE;AAJa,GAAD,CAAlC;;AAOA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBN,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAW,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASR;AAArC,KAAD,CAAR;AACAU,IAAAA,SAAS,CAACC,YAAV;AACH,GAHD;;AAKA,QAAM,CAACD,SAAD,IAAcrB,KAAK,CAACC,QAAN,CAAe,IAAIE,oBAAJ,CAAyB;AACxDoB,IAAAA,SAAS,EAAE;AAD6C,GAAzB,CAAf,CAApB;;AAKA,QAAMC,UAAU,GAAIN,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAIJ,SAAS,CAACK,QAAV,EAAJ,EAA0B;AACtBd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,QAAQ,EAAE,EAHL;AAILC,QAAAA,gBAAgB,EAAE;AAJb,OAAD,CAAR;AAMAK,MAAAA,SAAS,CAACM,YAAV;AACAvB,MAAAA,KAAK,CAACwB,OAAN,CAAc,qCAAd;AACAlB,MAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,KAVD,MAUO;AACHT,MAAAA,SAAS,CAACC,YAAV;AACAlB,MAAAA,KAAK,CAAC2B,KAAN,CAAY,6BAAZ;AACH;AACJ,GAhBD;;AAiBA,sBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,eAGI;AAAM,IAAA,QAAQ,EAAEP,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,WAAW,EAAC,WAHhB;AAII,IAAA,KAAK,EAAEb,KAAK,CAACG,SAJjB;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,IAAI,EAAC,WANT;AAOI,IAAA,KAAK,EAAC,MAPV;AAQI,IAAA,eAAe,EAAE;AACbkB,MAAAA,MAAM,EAAE;AADK,KARrB;AAWI,IAAA,MAAM,EAAGd,CAAD,IAAOD,aAAa,CAACC,CAAD,CAXhC;AAYI,IAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD,CAZlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAeKG,SAAS,CAACY,OAAV,CAAkB,WAAlB,EAA+BtB,KAAK,CAACG,SAArC,EAAgD,gBAAhD,CAfL,CADJ,eAkBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,WAAW,EAAC,QAHhB;AAII,IAAA,KAAK,EAAEH,KAAK,CAACE,KAJjB;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,IAAI,EAAC,OANT;AAOI,IAAA,KAAK,EAAC,QAPV;AAQI,IAAA,eAAe,EAAE;AACbmB,MAAAA,MAAM,EAAE;AADK,KARrB;AAWI,IAAA,MAAM,EAAGd,CAAD,IAAOD,aAAa,CAACC,CAAD,CAXhC;AAYI,IAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD,CAZlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAeKG,SAAS,CAACY,OAAV,CAAkB,OAAlB,EAA2BtB,KAAK,CAACE,KAAjC,EAAwC,gBAAxC,CAfL,CAlBJ,eAmCI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,KAAK,EAAEF,KAAK,CAACI,QAJjB;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,KAAK,EAAC,UAPV;AAQI,IAAA,eAAe,EAAE;AACbiB,MAAAA,MAAM,EAAE;AADK,KARrB;AAWI,IAAA,MAAM,EAAGd,CAAD,IAAOD,aAAa,CAACC,CAAD,CAXhC;AAYI,IAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD,CAZlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAeKG,SAAS,CAACY,OAAV,CAAkB,UAAlB,EAA8BtB,KAAK,CAACI,QAApC,EAA8C,UAA9C,CAfL,CAnCJ,eAoDI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,WAAW,EAAC,kBAHhB;AAII,IAAA,KAAK,EAAEJ,KAAK,CAACI,QAJjB;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,IAAI,EAAC,kBANT;AAOI,IAAA,KAAK,EAAC,kBAPV;AAQI,IAAA,eAAe,EAAE;AACbiB,MAAAA,MAAM,EAAE;AADK,KARrB;AAWI,IAAA,MAAM,EAAGd,CAAD,IAAOD,aAAa,CAACC,CAAD,CAXhC;AAYI,IAAA,QAAQ,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD,CAZlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAeKG,SAAS,CAACY,OAAV,CAAkB,kBAAlB,EAAsCtB,KAAK,CAACK,gBAA5C,EAA+D,MAAKL,KAAK,CAACI,QAAS,EAAnF,CAfL,CApDJ,eAqEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,SAAS,EAAC,0BAA5B;AAAuD,IAAA,IAAI,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAII,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6B;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,CADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,CAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6B;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,CAHJ,CAJJ,eASI;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAiD,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAjD,CATJ,CArEJ,CADJ,CAHJ,CAFJ,CADJ;AA6FH,CAhID;;AAkIA,eAAeP,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {toast} from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n\r\nimport './style.scss';\r\n\r\nconst SignUpPage = (props) => {\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        full_name: '',\r\n        password: '',\r\n        confirm_password: '',\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setValue({...value, [e.target.name]: e.target.value});\r\n        validator.showMessages();\r\n    };\r\n\r\n    const [validator] = React.useState(new SimpleReactValidator({\r\n        className: 'errorMessage'\r\n    }));\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setValue({\r\n                email: '',\r\n                full_name: '',\r\n                password: '',\r\n                confirm_password: '',\r\n            });\r\n            validator.hideMessages();\r\n            toast.success('Registration Complete successfully!');\r\n            props.history.push('/login');\r\n        } else {\r\n            validator.showMessages();\r\n            toast.error('Empty field is not allowed!');\r\n        }\r\n    };\r\n    return (\r\n        <Grid className=\"loginWrapper\">\r\n\r\n            <Grid className=\"loginForm\">\r\n                <h2>Signup</h2>\r\n                <p>Signup your account</p>\r\n                <form onSubmit={submitForm}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Full Name\"\r\n                                value={value.full_name}\r\n                                variant=\"outlined\"\r\n                                name=\"full_name\"\r\n                                label=\"Name\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('full name', value.full_name, 'required|alpha')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"E-mail\"\r\n                                value={value.email}\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('email', value.email, 'required|email')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Password\"\r\n                                value={value.password}\r\n                                variant=\"outlined\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('password', value.password, 'required')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Confirm Password\"\r\n                                value={value.password}\r\n                                variant=\"outlined\"\r\n                                name=\"confirm_password\"\r\n                                label=\"Confirm Password\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('confirm password', value.confirm_password, `in:${value.password}`)}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid className=\"formFooter\">\r\n                                <Button fullWidth className=\"cBtn cBtnLarge cBtnTheme\" type=\"submit\">Sign Up</Button>\r\n                            </Grid>\r\n                            <Grid className=\"loginWithSocial\">\r\n                                <Button className=\"facebook\"><i className=\"fa fa-facebook\"></i></Button>\r\n                                <Button className=\"twitter\"><i className=\"fa fa-twitter\"></i></Button>\r\n                                <Button className=\"linkedin\"><i className=\"fa fa-linkedin\"></i></Button>\r\n                            </Grid>\r\n                            <p className=\"noteHelp\">Already have an account? <Link to=\"/login\">Return to Sign In</Link>\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default withRouter(SignUpPage);"]},"metadata":{},"sourceType":"module"}